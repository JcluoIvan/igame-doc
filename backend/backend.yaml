openapi: 3.0.0
info:
  title: 後端管理頁面
  description: |
    #### 後端管理頁面
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
  version: 0.0.1
externalDocs:
  description: Find out more about Swagger
  url: "http://swagger.io"

servers:
  - url: "https://api.project-host.net/v1"
    description: 正式伺服器網址
  - url: "http://demo.project-host.net/v1"
    description: 測試伺服器網址
tags:
  - name: Get
    description: 所有會收到的類型
  - name: Send
    description: 可發出請求更新
  - name: Home
    description: 首頁
  - name: Information
    description: 個人
paths:
  /1:
    post:
      summary: 更新圖片資源
      tags:
        - Send
        - Get
        - Home
      requestBody:
        description: 更新圖片資源
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/EventData'
                - type: object
                  properties:
                    HASH_CODE:
                      type: string
                      example: (byte:3:*)
                      description: 圖片資源的 hash code, 用來檢查是否更新
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/EventData"
                  - type: object
                    properties:
                      DATA:
                        type: object
                        description: 圖片資源的資料 json data
                        example: (byte:3:*)
                        properties:
                          hashCode: 
                            type: string
                            description: 圖片資源的 hash code, 用來檢查是否更新
                          images:
                            type: array
                            description: 圖片資源列表
                            items:
                              $ref: '#/components/schemas/Image'
  /2:
    post:
      summary: 遊戲列表
      tags:
        - Send
        - Get
        - Home
      requestBody:
        description: 更新遊戲列表
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/EventData'
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/EventData"
                  - type: object
                    properties:
                      GAME_LIST:
                        type: array
                        description: 遊戲列表 json data 
                        example: (byte:3:*) 
                        items:
                          $ref: '#/components/schemas/Game'
                          
  /3:
    post:
      summary: 取得貼圖列表
      tags:
        - Send
        - Get
        - Home
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/EventData"
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/EventData"
                  - type: object
                    properties:
                      SKICKER: 
                        description: 貼圖列表 json data
                        example: (byte:3:*)
                        type: array
                        items: 
                          $ref: '#/components/schemas/Sticker'
  /4:
    post:
      summary: 取得頭像 skin 列表 (avatar skin)
      tags:
        - Send
        - Get
        - Home
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/EventData"
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/EventData"
                  - type: object
                    properties:
                      AVATAR_SKINS: 
                        description: 頭像 skin 列表 json data
                        example: (byte:3:*)
                        type: array
                        items: 
                          $ref: '#/components/schemas/AvatarSkin'
  /5:
    post:
      summary: 跑馬燈資訊
      tags:
        - Get
        - Home
      requestBody:
        description: "`無請求處理`"
        content:
          application/json:
            schema:
              example: empty
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/EventData"
                  - type: object
                    example: (byte:3:*)
                    properties:
                      MARQUEE:
                        type: string
                        description: 跑馬燈內容 (string)
                        example: (byte:3:*) string
  
  /6:
    post:
      summary: 取得玩家基本資料
      tags:
        - Send
        - Get
        - Home
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/EventData"
                - type: object
                  properties:
                    MEMBER_ID:
                      type: number
                      description: 玩家 id (uint64)
                      example: (byte:3:11)
                  
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/EventData"
                  - type: object
                    properties:
                      MEMBER_BASE_DATA: 
                        example: (byte:3:*)
                        type: object
                        allOf:
                          - $ref: '#/components/schemas/MemberBaseData'

  /7:
    post:
      summary: 取得隨機玩家 (必需過濾黑名單)
      tags:
        - Send
        - Get
        - Home
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/EventData"
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/EventData"
                  - type: object
                    properties:
                      MEMBER_BASE_DATA: 
                        example: (byte:3:*)
                        type: object
                        allOf:
                          - $ref: '#/components/schemas/MemberBaseData'
    
  /8:
    post:
      summary: 請求失敗，錯誤回應
      tags:
        - Send
        - Get
      requestBody:
        description: "`無請求處理`"
        content:
          application/json:
            schema:
              example: empty
      responses:
        "200":
          description: 當任何請求發生失敗的時後，都以此事件回傳錯誤內容
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/EventData"
                  - type: object
                    properties:
                      ERROR_CODE: 
                        example: (byte:3:5)
                        type: number
                      ERROR_MESSAGE:
                        example: (byte:5:*)
                        type: string
    
  /9:
    post:
      summary: 更新玩家點數 (Diamond Point & Game Point)
      tags:
        - Send
        - Get
        - Information
      requestBody:
        description: 請求更新點數錢包 `(僅更新自己的資料時，後端 server 才受理)`
        content:
          application/json:
            schema:
                allOf:
                  - $ref: "#/components/schemas/EventData"
                  - type: object
                    properties:
                      MEMBER_ID: 
                        type: number
                        example: (byte:3:*)
                        description: 玩家 id 
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/EventData"
                  - type: object
                    properties:
                      MEMBER_ID: 
                        type: number
                        example: (byte:3:11)
                        description: 玩家 id (int64)
                      DIAMOND_POINT:
                        type: number                
                        example: (byte:11:19)
                        description: Diamond point (int64)
                      GAME_POINT:
                        type: number                
                        example: (byte:19:*)
                        description: Diamond point (int64)
  /10:
    post:
      summary: 更新玩家等級、經驗值、階級(Level, Experience, Rank)
      tags:
        - Send
        - Get
        - Information
      requestBody:
        description: 請求更新 等級、經驗值、階級 `(僅更新自己的資料時，後端 server 才受理)`
        content:
          application/json:
            schema:
                allOf:
                  - $ref: "#/components/schemas/EventData"
                  - type: object
                    properties:
                      MEMBER_ID: 
                        type: number
                        example: (byte:3:*)
                        description: 玩家 id 
                        
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/EventData"
                  - type: object
                    properties:
                      MEMBER_ID: 
                        type: number
                        example: (byte:3:11)
                        description: 玩家 id (int64)
                      RANK:
                        type: number
                        example: (byte:11:15)
                        description: 階級 (uint32)
                      LEVEL:
                        type: number
                        example: (byte:15:19)
                        description: 等級 (uint32)
                      EXPERIENCE:
                        type: number
                        example: (byte:19:*)
                        description: 經驗值(uint64)
  /11:
    post:
      summary: 更新暱稱、頭像
      tags:
        - Send
        - Get
        - Information
      requestBody:
        description: 請求更新暱稱、頭像 `(僅更新自己的資料時，後端 server 才受理)`
        content:
          application/json:
            schema:
                allOf:
                  - $ref: "#/components/schemas/EventData"
                  - type: object
                    properties:
                      MEMBER_ID: 
                        type: number
                        example: (byte:3:*)
                        description: 玩家 id 
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/EventData"
                  - type: object
                    properties:
                      DATA:
                        type: object
                        example: (byte:3:*)
                        description: 個人資料 json data
                        properties:
                          avatar:
                            type: string
                            description: 頭像
                          nickname: 
                            type: string
                            description: 暱稱
  /12:
    post:
      summary: 更新 avatar skin (單一項目)
      tags:
        - Get
        - Information
      requestBody:
        description: 無請求
        content:
          application/json:
            schema:
              example: empty
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/EventData"
                  - type: object
                    properties:
                      MEMBER_ID: 
                        type: number
                        example: (byte:3:11)
                        description: 玩家 id 
                      SKIN_TYPE:
                        type: number
                        example: (byte:11:12)
                        description: skin 類型(uint8)
                        allOf:
                          - $ref: '#/components/schemas/AvatarSkinType'
                      SKIN_ID:
                        type: number
                        example: (byte:12:20)
                        description: avatar_skin.id (uint64)
  /13:
    post:
      summary: 更新玩家遊戲位置 (position)
      tags:
        - Get
        - Information
      requestBody:
        description: 無請求
        content:
          application/json:
            schema:
              example: empty
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/EventData"
                  - type: object
                    properties:
                      MEMBER_ID: 
                        type: number
                        example: (byte:3:11)
                        description: 玩家 id 
                      POSITION:
                        type: string
                        example: (byte:11:*)
                        description: 玩家目前位置
  /14:
    post:
      tags:
        - Get
        - Send
        - Information
      summary: 取得個人詳細資訊(自己)
      # description:
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/EventData"
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/EventData"
                  - type: object
                    description: json data
                    example: (byte:3:*)
                    properties:
                      rank:
                        type: number
                        description: 玩家階級
                      playerCode:
                        type: string
                        description: 玩家唯一 code (hash code)
                      email:
                        type: string
                        description: 玩家綁定的 email

components:
  schemas:
    EventData:
      type: object
      properties:
        EVENT_CHANNEL:
          type: string
          maxLength: 1
          description: |
            #### 請求的頻道, 用來確認資料的回傳(0. 則代表 server 端的主動訊息)
            - range: 1 ~ 255
            - 每個 channel 編號同時只能發送一次
            - 每個 channel 發送後，必需設定 timeout, 時間內未接到回傳時，認定失敗
          example: (byte:0:1)
        EVENT_ID:
          type: string
          maxLength: 2
          description: |
            #### 事件編號
            - range: 1 ~ 65535
            - 用來定義各請求 or 資料的編號
          example: (byte:1:3)
    Image:
      type: object
      properties:
        id: 
          type: number
          description: 圖片編號
        filename: 
          type: string
          description: 圖片名稱(檔名)
        url: 
          type: string
          description: 圖片資源網址
        numWidths:
          type: number
          description: 圖片切塊(寬)
        numHeights:
          type: number
          description: 圖片切塊(高)
    ImageIndex:
      type: object
      properties:
        imageId:
          type: number
          description: 圖片編號
        index:
          type: number
          description: 圖片位置  
    Sticker:
      type: object
      properties:
        name:
          type: string
          description: 貼圖名稱
        filename:
          type: string
          description: 貼圖的圖片名稱
        url: 
          type: string
          description: 圖片資源網址
        numWidths:
          type: number
          description: 圖片切塊(寬)
        numHeights:
          type: number
          description: 圖片切塊(高)
    AvatarSkinType:
      type: number
      description: |
        #### skin 類型
        - 1 # 頭像
        - 2 # 外框
        - 3 # 特效
        - 4 # 背景
      enum:
        - 1 # 頭像
        - 2 # 外框
        - 3 # 特效
        - 4 # 背景
    AvatarSkin:
      type: object
      properties:
        type: 
          $ref: '#/components/schemas/AvatarSkinType'
        name:
          type: string
          description: 貼圖名稱
        filename:
          type: string
          description: 貼圖的圖片名稱
        url: 
          type: string
          description: 圖片資源網址
    GameType:
      type: string
      description: |
        #### 遊戲類型
        - slot # Slot
        - table # table game 
      enum:
        #### 遊戲類型
        - slot # Slot
        - table # table game 
    Game:
      type: object
      properties:
        id:
          type: number
          description: 遊戲 ID
        type:
          $ref: '#/components/schemas/GameType'
        image: 
          $ref: '#/components/schemas/ImageIndex'
        name:
          type: string
          description: 遊戲名稱
        minimumLevel:
          type: number
          description: 最低等級限制
    MemberBaseData:
      type: object
      properties:
        avatar: 
          type: string
          description: 頭像圖片路徑
        nickname:
          type: string
          description: 玩家暱稱
        rank:
          type: number
          description: 玩家階級
        level:
          type: number
          description: 等級
        isFriend:
          type: boolean
          description: 是否為好友
        isBlock:
          type: boolean
          description: 是否黑名單
        experiencePercent:
          type: number
          description: 目前經驗值的百分比(小數 0.0 ~ 0.999) 
        diamondPoint:
          type: number
          description: 玩家鑽石點數
        gamePoint:
          type: number
          description: 玩家遊戲點數
        numLogins:
          type: number
          description: 登入次數
        position:
          type: string
          description: 玩家目前位置
        skin: 
          $ref: '#/components/schemas/MemberAvatarSkin'
    MemberAvatarSkin:
      type: object
      properties:
        skinAvatar: 
          type: number
          description: 頭像 skin 
        skinAvatarFrame:
          type: number
          description: 頭像外框 skin
        skinAvatarEffects:
          type: number
          description: 頭像特效 skin
        skinAvatarBackground:
          type: number
          description: 頭像背景 skin
          
        
