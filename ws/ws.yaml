openapi: 3.0.0
info:
  title: Swagger Petstore
  description: |
    #### websocket 通訊 (非 request / response )
    - 所有 send/get 資料都是 bytes 資料, 由 string 代表, 使用 maxLength 代表佔位, 每 1 長度代表 1 byte
    - 資料開頭由 channel(uint8) + event id (uint16_ 組成，共 3 bytes
      - uint8 (1 ~ 255) 為請求的 channel , 相同的 channel 同一時間只能發出一個 (0 為保留值，代表後端主動發出的)
      - uint16 (1 ~ 65535) 為請求類型, 請參考下方 api 說明
    - 參數名稱為(大寫)代表為 byte 資料，於「備註」說明佔位大小，以 byte:{strart}:{end}表示
      - 例如開頭的 channel 為 1byte, 以 byte:0:1 表示， event id 為 byte:1:3
    - 由於 js 無法直接讀取 bit 資料, 所以 boolean 也使用 1 byte 長度(0 or 1)
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
  version: 0.0.1
externalDocs:
  description: Find out more about Swagger
  url: "http://swagger.io"

servers:
  - url: "https://api.project-host.net/v1"
    description: 正式伺服器網址
  - url: "http://demo.project-host.net/v1"
    description: 測試伺服器網址
tags:
  - name: None
    description: 功能從缺
  - name: All
    description: 所有會收到的類型
  - name: Home
    description: 首頁
  - name: Personal
    description: 個人
  - name: Mission 
    description: 任務
  - name: Mail
    description: 信箱
  - name: Friend
    description: 好友
  - name: Chat
    description: 聊天
  - name: Store
    description: 商店
  - name: Exchange
    description: 交換
  - name: Gashapon
    description: 轉蛋
  - name: Announcement
    description: 公告
paths:
  /1:
    post:
      summary: 心跳確認
      tags:
        - All
        - Home
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/RequestEventData'
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResponseEventData'
  /2:
    post:
      summary: 功能從缺
      tags:
        - None
      responses:
        200:
          description: ok
  /3:
    post:
      summary: 功能從缺
      tags:
        - None
      responses:
        200:
          description: ok
  /4:
    post:
      summary: 遊戲列表
      tags:
        - All
        - Home
      requestBody:
        description: 更新遊戲列表
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/RequestEventData'
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResponseEventData'
                  - type: object
                    properties:
                      GAME_LIST:
                        type: array
                        description: 遊戲列表 json data 
                        example: (byte:*) 
                        items:
                          $ref: '#/components/schemas/Game'
  
  /5:
    post:
      summary: 跑馬燈資訊
      tags:
        - All
        - Home
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResponseEventData'
                  - type: object
                    properties:
                      MARQUEE:
                        type: string
                        description: 跑馬燈內容 (string)
                        example: (byte:*) string
  
  /6:
    post:
      summary: 取得玩家基本資料
      tags:
        - All
        - Home
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/RequestEventMemberData"
                  
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResponseEventData"
                  - type: object
                    properties:
                      MEMBER_BASE_DATA: 
                        example: (byte:*)
                        type: object
                        allOf:
                          - $ref: '#/components/schemas/Member'

  /7:
    post:
      summary: 取得隨機玩家 (必需過濾黑名單)
      tags:
        - All
        - Home
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/RequestEventData"
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResponseEventData"
                  - type: object
                    properties:
                      MEMBER_BASE_DATA: 
                        example: (byte:*)
                        type: object
                        allOf:
                          - $ref: '#/components/schemas/Member'
    
  /8:
    post:
      summary: 請求失敗，錯誤回應
      tags:
        - All
      requestBody:
        description: "`無請求處理`"
        content:
          application/json:
            schema:
              example: empty
      responses:
        200:
          description: 當任何請求發生失敗的時後，都以此事件回傳錯誤內容
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResponseEventData"
                  - type: object
                    properties:
                      ERROR_CODE: 
                        example: (byte:4)
                        description: uint32
                        type: number
                      ERROR_MESSAGE:
                        example: (byte:*)
                        type: string
  /9:
    post:
      summary: 取得 Diamond Point
      tags:
        - All
        - Home
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/RequestEventData'
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResponseEventMemberData"
                  - type: object
                    properties:
                      DIAMOND_POINT:
                        type: number                
                        example: (byte:8)
                        description: Diamond point (int64)                       
  /10:
    post:
      summary: 取得 Game Point
      tags:
        - All
        - Home
      requestBody:
        description: 僅允許更新自己的點數
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/RequestEventData'
      responses:
        200:
          description: 除了自己遊戲點數以外， server 也會主動通知其他玩家遊戲點數更新
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResponseEventMemberData"
                  - type: object
                    properties:
                      GAME_POINT:
                        type: number                
                        example: (byte:8)
                        description: Game point (int64)
  /11:
    post:
      summary: 無功能
      tags:
        - None
      responses:
        200:
          description: ok

  /12:
    post:
      summary: 取得 玩家等級 & 經驗值(Experience)
      tags:
        - All
        - Personal
      requestBody:
        content:
          application/json:
            schema:
                allOf:
                  - $ref: "#/components/schemas/RequestEventData"
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResponseEventMemberData"
                  - type: object
                    properties:
                      LEVEL:
                        type: number
                        example: (byte:4)
                        description: 經驗值(uint32)
                      EXPERIENCE:
                        type: number
                        example: (byte:8)
                        description: 經驗值(uint64)
  /13:
    post:
      summary: 未設定
      tags:
        - None

      responses:
        200:
          description: ok
  /14:
    post:
      summary: 設定玩家頭像
      tags:
        - All
        - Personal
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/RequestEventData'
                - type: object
                  properties:
                    AVATAR: 
                      type: string
                      example: (byte:*)
                      description: 圖片資料 bytes
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResponseEventMemberData"
                  - type: object
                    properties:
                      AVATAR_URL:
                        type: string
                        example: (byte:*)
                        description: 頭像網址
  /15:
    post:
      summary: 設定 skin
      tags:
        - All
        - Personal
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/RequestEventData'
                - type: object
                  properties:
                    SKINS:
                      type: array
                      example: (byte:*)
                      description: skin id 陣列 (json data)
                      items:
                        type: number 

      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResponseEventData"
                  - type: object
                    properties:
                      MEMBER_ID: 
                        type: number
                        example: (byte:8)
                        description: 玩家 id (uint64)
                      SKINS:
                        type: array
                        example: (byte:*)
                        description: 已套用的 skin 陣列 (json data)
                        items:
                          type: number 
  /16:
    post:
      summary: 修改簡介
      tags:
        - All
        - Personal
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/RequestEventData'
                - type: object
                  properties:
                    INTRODUCTION:
                      type: string
                      example: (byte:*)
                      description: 簡介
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResponseEventMemberData'
                  - type: object
                    properties:
                      INTRODUCTION:
                        type: string
                        example: (byte:*)
                        description: 簡介
                    
  /17:
    post:
      summary: 取得 email
      tags:
        - All
        - Personal
      description: 僅會更新自己的 email 資料
      requestBody:
        content:
          application/json:
            schema:
                allOf:
                  - $ref: "#/components/schemas/RequestEventData"
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResponseEventData"
                  - type: object
                    properties:
                      EMAIL:
                        type: string
                        example: (byte:*)
                        description: 玩家 Email
  /18:
    post:
      summary: 更新玩家遊戲位置 (position)
      tags:
        - All
        - Personal
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/RequestEventData'
                - type: object
                  properties:
                    POSITION:
                      type: string
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/ResponseEventData"
                  - type: object
                    properties:
                      MEMBER_ID: 
                        type: number
                        example: (byte:8)
                        description: 玩家 id (uint64)
                      POSITION:
                        type: string
                        example: (byte:*)
                        description: 玩家目前位置
  /19:
    post:
      summary: 檢查暱稱重複
      tags: 
        - All
        - Personal
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/RequestEventData' 
                - type: object
                  properties:
                    NICKNAME:
                      type: string
                      example: (byte:*)
                      description: 暱稱
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResponseEventData'
                  - type: object
                    properties:
                      NUM_REPEATS: 
                        type: number
                        example: (byte:4)
                        description: 暱稱重複次數(uint32)
                      NICKNAME:
                        type: string
                        example: (byte:*)
                        description: 暱稱
  /20:
    post:
      summary: 修改 暱稱
      tags:
        - All
        - Personal
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/RequestEventData'
                - type: object
                  properties:
                    NICKNAME: 
                      type: string
                      example: (byte:*)
                      description: 修改玩家自己的暱稱
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                allOf: 
                  - $ref: "#/components/schemas/ResponseEventMemberData"
                  - type: object
                    properties:
                      DATA:
                        type: object
                        example: (byte:*)
                        description: 暱稱、 code
                        properties:
                          nickname: 
                            type: string
                            description: 暱稱
                          code:
                            type: string
                            description: 玩家 code
  /21:
    post:
      summary: 查詢已推薦的玩家
      tags:
        - All
        - Personal
        - Edit0224
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/RequestEventData'
                - type: object
                  properties:
                    QUERY:
                      type: object
                      example: (byte:*)
                      description: 查詢條件 (json data)
                      allOf:
                        - $ref: '#/components/schemas/QueryList'

      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResponseEventData'
                  - type: object
                    properties:
                      DATA:
                        example: (byte:*)
                        description: 取得已推薦的玩家列表資料 (json data)
                        allOf:
                          - $ref: '#/components/schemas/ResponseList'
                          - type: object
                            properties:
                              rows:
                                type: array
                                items:
                                  $ref: '#/components/schemas/Member'
  /22:
    post:
      summary: 取得累積回饋、介紹人、
      tags:
        - All
        - Personal
        - Edit0224
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/RequestEventData'
      responses:
        200:
          description: 'ok'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResponseEventData'
                  - type: object
                    properties:
                      BONUS:
                        type: number
                        example: (byte:8)
                        description: 累計回饋(uint64)
                      INVITE_FROM:
                        allOf:
                          - $ref: '#/components/schemas/Member'
                          - type: object
                            example: (byte:*)
                            description: 推薦人資料

  /23:
    post:
      summary: 取得 / 儲存 個人設定
      tags:
        - All
        - Personal
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/RequestEventData'
                - type: object
                  properties:
                    SAVE:
                      type: boolean
                      example: (byte:1)
                      description: 是否儲存設定 (若為否, 後面的資訊可省略)
                    ALLOW_TALK_STRANGER:
                      type: boolean
                      example: (byte:1)
                      description: 是否接受陌生人密語
                    ALLOW_INVITE_FRIEND:
                      type: boolean
                      example: (byte:1)
                      description: 是否允許好友邀請
                    TRANSACTION_PASSWORD_SETTED:
                      type: boolean
                      example: (byte:1)
                      description: 是否已設定交易密碼
      responses:
        200:
          description: 取得個人設定資料
          content:
            application/json:
              schema:
                allOf: 
                  - $ref: '#/components/schemas/ResponseEventData'
                  - type: object
                    properties:
                      ALLOW_TALK_STRANGER:
                        type: boolean
                        example: (byte:1)
                        description: 是否接受陌生人密語
                      ALLOW_INVITE_FRIEND:
                        type: boolean
                        example: (byte:1)
                        description: 是否允許好友邀請
                      TRANSACTION_PASSWORD_SETTED:
                        type: boolean
                        example: (byte:1)
                        description: 是否已設定交易密碼
  /24:
    post:
      summary: 個人道具列表更新
      tags:
        - All
        - Personal
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/RequestEventData'
      responses:
        200:
          description: 僅更新自己的資料
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResponseEventData'
                  - type: object
                    properties:
                      ITEMS:
                        type: array
                        example: (byte:*)
                        description: 道具列表 (json data)
                        items:
                          type: object
                          properties:
                            id: 
                              type: number
                              description: 道具 id 
                            numItems:
                              type: number
                              description: 道具數量
  /25:
    post:
      summary: 個人已解鎖 skin
      tags:
        - All
        - Personal
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/RequestEventData'
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResponseEventData'
                  - type: object
                    properties:
                      SKINS:
                        type: array
                        example: (byte:*)
                        description: 個人 skin 列表 (json data)
                        items:
                          type: object
                          properties:
                            id:
                              type: number
  /26:
    post:
      summary: 個人遊戲分數統計
      tags:
        - All
        - Personal 
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/RequestEventData'
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResponseEventData'
                  - type: object
                    properties:
                      RECORDS:
                        type: array
                        example: (byte:*)
                        description: 遊戲記錄
                        items:
                          type: object
                          properties:
                            type:
                              $ref: '#/components/schemas/GameType'
                            today:
                              $ref: '#/components/schemas/GameRecord'
                            total:
                              $ref: '#/components/schemas/GameRecord'

  /27:
    post:
      summary: 任務列表
      tags:
        - All
        - Mission
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/RequestEventData'
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResponseEventData'
                  - type: object
                    properties:
                      MISSIONS:
                        type: object
                        properties:
                          dailys:
                            type: array
                            description: 每日任務列表
                            items:
                              $ref: '#/components/schemas/Mission'
                          longTerms:
                            type: array
                            description: 期間任務列表
                            items:
                              $ref: '#/components/schemas/Mission'
  /28:
    post:
      summary: 更新任務狀態
      tags:
        - All
        - Mission
      requestBody:
        content:
          application/json:
            schema:
              description: 僅更新自己 & 已承接的任務資料
              allOf:
                - $ref: '#/components/schemas/RequestEventData'
                - type: object
                  properties:
                    MISSION_ID:
                      type: number
                      example: (byte:8)
                      description: 任務 id (uint64)

      responses:
        200: 
          description: ok
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResponseEventData'
                  - type: object
                    properties:
                      MEMBER_MISSION_ID:
                        type: number
                        example: (byte:8)
                        description: 玩家接受任務後的 mmid (uint64)
                      STATUS:
                        type: number
                        example: (byte:1)
                        description: 任務狀態 (int8)
                      ACTUAL_VALUE:
                        type: number
                        example: (byte:4)
                        description: 目前達成值 (int32)
  /29:
    post:
      summary: 承接任務
      tags:
        - All
        - Mission
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/RequestEventData'
                - type: object
                  properties:
                    MISSION_ID:
                      type: number
                      example: (byte:8)
                      description: 任務 id
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResponseEventData'
                  - type: object
                    properties:
                      MISSION_ID:
                        type: number
                        example: (byte:8)
                        description: 任務 id
                      MEMBER_MISSION_ID:
                        type: number
                        example: (byte:8)
                        description: 玩家接受任務後的 mmid (uint64)
                      STATUS:
                        type: number
                        example: (byte:1)
                        description: 任務狀態 (int8)
                      ACTUAL_VALUE:
                        type: number
                        example: (byte:4)
                        description: 目前達成值 (int32)
  /30:
    post:
      summary: 領取已完成的任務獎勵
      tags:
        - All
        - Mission
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                  - $ref: '#/components/schemas/RequestEventData'
                  - type: object
                    properties:
                      MEMBER_MISSION_ID:
                        type: number
                        example: (byte:8)
                        description: 玩家接受任務後的 mmid (uint64)
      responses:
        200: 
          description: ok
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResponseEventData'
                  - type: object
                    properties:
                      MEMBER_MISSION_ID:
                        type: number
                        example: (byte:8)
                        description: 玩家接受任務後的 mmid (uint64)
  /31:  
    post:
      summary: 取得個人信件列表
      tags:
        - All
        - Mail
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/RequestEventData'
                - type: object
                  properties:
                    QUERY: 
                      type: object
                      example: (byte:*)
                      description: 查詢條件
                      allOf:
                        - $ref: '#/components/schemas/QueryList'
      responses:
        200:
          description: ok
          content: 
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResponseEventData'
                  - type: object
                    properties:
                      DATA: 
                        type: object
                        example: (byte:*)
                        description: mail list (json data)
                        allOf:
                          - $ref: '#/components/schemas/ResponseList'
                          - type: object
                            properties:
                              rows:
                                type: array
                                items: 
                                  $ref: '#/components/schemas/MailRow'
  /32:
    post:
      summary: 取得信件內容
      tags:
        - All
        - Mail
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/RequestEventData'
                - type: object
                  properties:
                    MAIL_ID:
                      type: number
                      example: (byte:8)
                      description: mail id (uint64)
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResponseEventData'
                  - type: object
                    properties:
                      MAIL:
                        type: object
                        example: (byte:*)
                        description: mail 完整內容
                        allOf:
                          - $ref: '#/components/schemas/MailDetail'
  /33:
    post:
      summary: 已讀信件
      tags:
        - All
        - Mail
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/RequestEventData'
                - type: object
                  properties:
                    MAIL_ID:
                      type: number
                      example: (byte:8)
                      description: mail id (uint64)
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResponseEventData'
                  - type: object
                    properties:
                      MAIL_ID:
                        type: number
                        example: (byte:*)
                        description: mail id (uint64)
                      READED_AT:
                        type: number
                        example: (byte:8)
                        description: readed at (int64)
                      NUM_UNREADS:
                        type: number
                        example: (byte:4)
                        description: 未讀信件筆數 (uint32)
  /34:
    post:
      summary: 領取附件
      tags:
        - All
        - Mail
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/RequestEventData'
                - type: object
                  properties:
                    MAIL_ID:
                      type: number
                      example: (byte:8)
                      description: mail id (uint64)
      responses:
        200: 
          description: ok       
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResponseEventData'
                  - type: object
                    properties:
                      MAIL_ID:
                        type: number
                        example: (byte:8)
                        description: mail id (uint64)
                      RECEIVED_AT:
                        type: number
                        example: (byte:8)
                        description: received at (int64)
                      NUM_UNREADS:
                        type: number
                        example: (byte:4)
                        description: 未讀信件筆數 (uint32)
  /35:
    post:
      summary: 刪除信件
      tags:
        - All
        - Mail
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/RequestEventData'
                - type: object
                  properties:
                    IDS: 
                      type: array
                      example: (byte:*)
                      description: mail ids (json data)
                      items:
                        type: number
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResponseEventData'
                  - type: object
                    properties:
                      MAIL_ID:
                        type: number
                        example: (byte:8)
                        description: mail id (uint64)
                      NUM_UNREADS:
                        type: number
                        example: (byte:4)
                        description: 未讀信件筆數 (uint32)
  /36:
    post:
      summary: 已讀 / 領取 所有信件
      tags:
        - All
        - Mail
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/RequestEventData'
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResponseEventData'
                  - type: object
                    properties:
                      NUM_UNREADS:
                        type: number
                        example: (byte:4)
                        description: 未讀信件筆數 (uint32)
  /37:
    post:
      summary: 刪除已讀 / 已領取的信件
      tags:
        - All
        - Mail
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/RequestEventData'
      responses:
        200:
          description: 完成後，重新執行 `/31` 指令更新信件列表
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResponseEventData'
  /38:
    post:
      summary: 取得未讀信件筆數
      tags:
        - All
        - Mail
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/RequestEventData'
      responses:
        200:
          description: 完成後，重新執行 `/31` 指令更新信件列表
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResponseEventData'
                  - type: object
                    properties:
                      NUM_UNREADS:
                        type: number
                        example: (byte:4)
                        description: 未讀信件筆數 (uint32)
  /39:
    post:
      summary: 取得好友列表、已邀請、等待回應、黑名單列表
      tags:
        - All
        - Friend
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/RequestEventData'
                - type: object
                  properties:
                    QUERY: 
                      type: object
                      example: (byte:*)
                      description: 查詢條件
                      allOf:
                        - $ref: '#/components/schemas/QueryList'
                        - type: object
                          properties:
                            status:
                              oneOf:
                                - $ref: '#/components/schemas/InviteStatus'
                                - type: number
                                  example: -1
                                  description: 不限制
      responses:
        200:
          description: ok
          content: 
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResponseEventData'
                  - type: object
                    properties:
                      DATA: 
                        type: object
                        example: (byte:*)
                        description: mail list (json data)
                        allOf:
                          - $ref: '#/components/schemas/ResponseList'
                          - type: object
                            properties:
                              rows:
                                type: array
                                items: 
                                  $ref: '#/components/schemas/Member'
  /40:
    post:
      summary: 邀請好友 / 同意邀請
      tags:
        - All
        - Friend
      requestBody:
        content:
          application/json:
            schema:
              description: 邀請對方成為好友, 若是等待回應的狀態, 則同意成為好友
              allOf:
                - $ref: '#/components/schemas/RequestEventData'
                - type: object
                  properties:
                    MEMBER_ID:
                      type: number
                      example: (byte:8)
                      description: 對方 id (uint64)

      responses:
        200: 
          description: ok       
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResponseEventData'
                  - type: object
                    properties:
                      MEMBER_ID:
                        type: number
                        example: (byte:8)
                        description: 玩家 id (uint64)
                      STATUS:
                        allOf: 
                          - $ref: '#/components/schemas/InviteStatus'
                          - type: number
                            example: (byte:1)
  /41:
    post:
      summary: 解除好友 / 取消邀請 / 拒絕好友邀請
      tags:
        - All
        - Friend
      requestBody:
        content:
          application/json:
            schema:
              description: |
                各狀態處理行為：
                - 好友 : 解除雙方好友狀態
                - 邀請對方 : 取消邀請
                - 等待回應 : 拒絕邀請
              allOf:
                - $ref: '#/components/schemas/RequestEventData'
                - type: object
                  properties:
                    MEMBER_ID:
                      type: number
                      example: (byte:8)
                      description: 對方 id(uint64)
      responses:
        200: 
          description: ok       
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResponseEventData'
                  - type: object
                    properties:
                      MEMBER_ID:
                        type: number
                        example: (byte:8)
                        description: 玩家 id (uint64)
                      STATUS:
                        allOf: 
                          - $ref: '#/components/schemas/InviteStatus'
                          - type: number
                            example: (byte:1)
  /42:
    post:
      summary: 加入 / 移除黑名單
      tags:
        - All
        - Friend
      requestBody:
        content:
          application/json:
            schema:
              description: 邀請對方成為好友, 若是等待回應的狀態, 則同意成為好友
              allOf:
                - $ref: '#/components/schemas/RequestEventData'
                - type: object
                  properties:
                    MEMBER_ID:
                      type: number
                      example: (byte:8)
                      description: 對方 id (uint64)
                    ACTION:
                      type: boolean
                      example: (byte:1)
                      description: 'true. 設為黑名單, false. 從黑名單中移除'
      responses:
        200: 
          description: ok       
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResponseEventData'
                  - type: object
                    properties:
                      MEMBER_ID:
                        type: number
                        example: (byte:8)
                        description: 玩家 id (uint64)
                      IS_BLOCK:
                        type: boolean
                        example: (byte:1)
                        description: 是否為黑名單
  /43:
    post:
      summary: 取得各狀態的人數
      tags:
        - All
        - Friend
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/RequestEventData'
      responses:
        200: 
          description: ok       
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResponseEventData'
                  - type: object
                    properties:
                      NUM_INVITEDS: 
                        type: number
                        example: (byte:4)
                        description: 等待回應的數量 uint32
  /44:
    post:
      summary: 查詢玩家
      tags:
        - All
        - Friend
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/RequestEventData'
                - type: object
                  properties:
                    QUERY: 
                      type: object
                      example: (byte:0)
                      description: 查詢條件
                      allOf:
                        - $ref: '#/components/schemas/QueryList'
                        - type: object
                          properties:
                            search:
                              type: string
                              description: 查詢玩家
      responses:
        200: 
          description: ok       
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResponseEventData'
                  - type: object
                    properties:
                      DATA: 
                        type: object
                        example: (byte:*)
                        description: player list (json data)
                        allOf:
                          - $ref: '#/components/schemas/ResponseList'
                          - type: object
                            properties:
                              rows:
                                type: array
                                items: 
                                  $ref: '#/components/schemas/Member'
  /45:
    post:
      summary: 進入 / 離開聊天室
      tags:
        - All
        - Chat
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/RequestEventData'
                - type: object
                  properties:
                    ENTER_OR_LEAVE: 
                      type: boolean
                      example: (byte:1)
                      description: true. 進入, false. 離開
      responses:
        200:
          description: ok
          content: 
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResponseEventData'
                  - type: object
                    properties:
                      ENTER_OR_LEAVE: 
                        type: boolean
                        example: (byte:1)
                        description: true. 進入, false. 離開
  /46:
    post:
      summary: 取得公開頻道列表
      tags:
        - All
        - Chat
      requestBody:
        content:
          application/json:
            schema:
              allOf: 
                - $ref: '#/components/schemas/RequestEventData'
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResponseEventData'
                  - type: object
                    properties:
                      DATA:
                        type: array
                        example: (byte:*)
                        description: 公開頻道列表
                        items:
                          $ref: '#/components/schemas/ChatPublic'
  /47:
    post:
      summary: 發送 / 收到聊天訊息(聊天室)
      tags:
        - All
        - Chat
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/RequestEventData'
                - type: object
                  properties:
                    DATA:
                      type: object
                      example: (byte:*)
                      description: 訊息資料(json data)
                      properties:
                        chatId:
                          type: number
                        messageType:
                          $ref: '#/components/schemas/MessageType'
                        message: 
                          type: string
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResponseEventData'
                  - type: object
                    properties:
                      DATA: 
                        type: object
                        example: (byte:*)
                        description: 訊息內容 (json data)
                        allOf:
                          - $ref: '#/components/schemas/ChatMessage'
  /48:
    post:
      summary: 未設定
      tags:
        - None
      responses:
        200:
          description: ok
  /49:
    post:
      summary: 收到 / 發送 私人訊息(1 對 1 訊息)
      tags:
        - All
        - Chat
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/RequestEventData'
                - type: object
                  properties:
                    DATA:
                      type: object
                      example: (byte:*)
                      description: 訊息資料(json data)
                      properties:
                        toId:
                          type: number
                        messageType:
                          $ref: '#/components/schemas/MessageType'
                        message: 
                          type: string
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResponseEventData'
                  - type: object
                    properties:
                      DATA:
                        type: object
                        example: (byte:*)
                        description: 訊息內容 (json data)
                        allOf:
                          - $ref: '#/components/schemas/PrivateMessage'

  /50:
    post:
      summary: 未設定
      tags:
        - None
      responses:
        200:
          description: ok

  /51:
    post:
      summary: 查詢在線玩家
      tags:
        - All
        - Chat
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/RequestEventData'
                - type: object
                  properties:
                    SEARCH:
                      type: string
                      example: (byte:*)
                      description: 查詢名稱
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResponseEventData'
                  - type: object
                    properties:
                      DATA:
                        type: array
                        example: (byte:*)
                        description: 玩家列表 (json data)
                        items:
                          $ref: '#/components/schemas/Member'
  /52:
    post:
      summary: 取得商店列表
      tags:
        - All
        - Store
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/RequestEventData'
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResponseEventData'
                  - type: object
                    properties:
                      DATA:
                        type: array
                        example: (byte:*)
                        description: 商店列表
                        items:
                          $ref: '#/components/schemas/Store'
  /53:
    post:
      summary: 購入
      tags:
        - All
        - Store
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/RequestEventData'
                - type: object
                  properties:
                    COMMODITY_TYPE:
                      allOf:
                        - $ref: '#/components/schemas/CommodityType'
                        - type: number
                          example: (byte:1)
                    ID:
                      type: number
                      example: (byte:8)
                      description: 商品 id (uint64)
                    COUNT:
                      type: number
                      example: (byte:4)
                      description: 購買數量 (uint32)
      responses:
        200: 
          description: ok
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResponseEventData'
                  - type: object
                    properties:
                      DIAMOND_POINT:
                        type: number
                        example: (byte:8)
                        description: 售出後 diamond point 餘額 (int64)
                      GAME_POINT:
                        type: number
                        example: (byte:8)
                        description: 售出後 game point 餘額 (int64)
  /54:
    post:
      summary: 售出
      tags:
        - All
        - Store
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/RequestEventData'
                - type: object
                  properties:
                    ITEMS:
                      type: array
                      example: (byte:*)
                      description: 售出的道具商品編號, 只有道具可賣出 (json data)
                      items:
                        type: number
                        description: 商品編號
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResponseEventData'
                  - type: object
                    properties:
                      DIAMOND_POINT:
                        type: number
                        example: (byte:8)
                        description: 售出後 diamond point 餘額 (int64)
                      GAME_POINT:
                        type: number
                        example: (byte:8)
                        description: 售出後 game point 餘額 (int64)
  /55:
    post:
      summary: 送出交換邀請
      tags:
        - All
        - Exchange
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/RequestEventData'
                - type: object
                  properties:
                    ID:
                      type: number
                      example: (byte:8)
                      description: 交易對象 id
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResponseEventData'
                  - type: object
                    properties:
                      DATA:
                        type: object
                        example: (byte:*)
                        description: 邀請某人 (json data)
                        allOf:
                          - $ref: '#/components/schemas/Member'
  /56:
    post:
      summary: 收到交換邀請
      tags:
        - All
        - Exchange
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResponseEventData'
                  - type: object
                    properties:
                      DATA:
                        type: object
                        example: (byte:*)
                        description: 來自某人的交換邀請 (json data)
                        allOf:
                          - $ref: '#/components/schemas/Member'
  /57:
    post:
      summary: 接受交換邀請
      tags:
        - All
        - Exchange
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/RequestEventData'
                - type: object
                  properties:
                    ID:
                      type: number
                      example: (byte:8)
                      description: 接受某玩家的交請 (uint64)
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResponseEventData'
                  - type: object
                    properties:
                      ID:
                        type: number
                        example: (byte:8)
                        description: 交換對象的 id , 若有問題即中斷 (uint64)
  /58:
    post:
      summary: 取消 / 中斷 / 拒絕交換邀請、狀態
      tags:
        - All
        - Exchange
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/RequestEventData'
                - type: object
                  properties:
                    ID:
                      type: number
                      example: (byte:8)
                      description: 拒絕的對象 id (uint64), 0 則全部拒絕
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResponseEventData'
                  - type: object
                    properties:
                      ID:
                        type: number
                        description: 取消 / 中斷此交易的玩家
  /59:
    post:
      summary: 交易密碼驗證 (取得交易 token)
      tags:
        - All
        - Exchange
      requestBody:
        content:
          application/json:
            schema:
              allOf: 
                - $ref: '#/components/schemas/RequestEventData'
                - type: object
                  properties:
                    PASSWORD:
                      type: string
                      example: (byte:*)
                      description: 交易密碼
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResponseEventData'
                  - type: object
                    properties:
                      EXCHANGE_TOKEN:
                        type: string
                        example: (byte:*)
                        description: 一次性 token 
  /60:
    post:
      summary: 更新交易狀態
      tags:
        - All
        - Exchange
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/RequestEventData'
                - type: object
                  properties:
                    DATA: 
                      type: object
                      example: (byte:*)
                      description: 提交交換內容 (json data)
                      properties:
                        step:
                          $ref: '#/components/schemas/ExchangeStep'
                        gamePoint: 
                          type: number
                        itemId:
                          type: number
                        numItem:  
                          type: number
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResponseEventData'
                  - type: object
                    properties:
                      DATA:
                        type: array
                        example: (byte:*)
                        description: 交換內容 (json data)
                        items:
                          $ref: '#/components/schemas/ExchangeContent'
  /61:
    post:
      summary: 交換完成
      tags:
        - All
        - Exchange
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResponseEventMemberData'
  /62:
    post:
      summary: 取得轉蛋活動
      tags:
        - All
        - Gashapon
      requestBody:
        content:
          application/json:
            schema: 
              allOf:
                - $ref: '#/components/schemas/RequestEventData'
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResponseEventData'
                  - type: object
                    properties:
                      DATA:
                        type: array
                        example: (byte:*)
                        description: 轉蛋活動 (json data)
                        items:
                          $ref: '#/components/schemas/Gashapon'
  /63:
    post:
      summary: 抽轉蛋
      tags:
        - All
        - Gashapon
      requestBody:
        content:
          application/json:
            schema: 
              allOf:
                - $ref: '#/components/schemas/RequestEventData'
                - type: object
                  properties:
                    GASHAPON_ID:
                      type: number
                      example: (byte:8)
                      description: 轉蛋活動 id (uint64)
                    GASHAPON_COST_ID:
                      type: number
                      example: (byte:8)
                      description: 消費方式 id (uint64)
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResponseEventData'
                  - type: object
                    properties:
                      ITEMS:
                        type: array
                        example: (byte:*)
                        description: 獲得的道具
                        items:
                          type: object
                          properties:
                            id: 
                              type: number
                              description: 道具 id 
                            numItems:
                              type: number
                              description: 道具數量
  /64:
    post:
      summary: 取得公告
      tags:
        - All
        - Announcement
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/RequestEventData'
                - type: object
                  properties:
                    QUERY: 
                      type: object
                      example: (byte:*)
                      description: 查詢條件
                      allOf:
                        - $ref: '#/components/schemas/QueryList'
                        - type: object
                          properties:
                            type: 
                              $ref: '#/components/schemas/QueryAnnouncementType'

      responses:
        200: 
          description: ok
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/ResponseEventData'
                  - type: object
                    properties:
                      DATA:
                        type: object
                        example: (byte:*)
                        description: 公告列表
                        allOf:
                          - $ref: '#/components/schemas/ResponseList'
                          - type: object
                            properties:
                              rows:
                                type: array
                                items:
                                  $ref: '#/components/schemas/Announcement'
              

components:
  schemas:
    RequestEventData:
      type: object
      properties:
        EVENT_CHANNEL:
          type: number
          description: |
            #### 請求的頻道, 用來確認資料的回傳(0. 則代表 server 端的主動訊息)
            - range: 1 ~ 255
            - 每個 channel 編號同時只能發送一次
            - 每個 channel 發送後，必需設定 timeout, 時間內未接到回傳時，認定失敗
          example: (byte:1)
        EVENT_ID:
          type: number
          description: |
            #### 事件編號
            - range: 1 ~ 65535
            - 用來定義各請求 or 資料的編號
          example: (byte:2)
    RequestEventMemberData: 
      allOf:
        - $ref: '#/components/schemas/RequestEventData'
        - type: object
          properties:
            MEMBER_ID: 
              type: number
              example: (byte:8)
              description: 玩家 id (uint64)
    ResponseEventData:
      allOf:
        - type: object
          properties:
            VERSION_ID:
              type: number
              example: (byte:4)
              description: |
                - 訊息序列編號 (uint32)
                - 每次由 Server 端傳送的訊息 + 1
                - Client 檢查差值是否與上次請求差 1
                - 若差值大於 3, 則重新登入
        - $ref: '#/components/schemas/RequestEventData'
    ResponseEventMemberData: 
      allOf:
        - $ref: '#/components/schemas/ResponseEventData'
        - type: object
          properties:
            MEMBER_ID: 
              type: number
              example: (byte:8)
              description: 玩家 id (uint64)
    QueryList:
      description: 分頁查詢
      type: object
      required:
        - page
        - size
        - tota
      properties:
        page:
          type: number
          description: 頁數
          example: 1
        size:
          type: number
          description: 每頁資料筆數
          example: 15
        sorts:
          type: array
          description: 查詢資料排序
          example: ["name desc", "id asc"]
          items:
            type: string
    ResponseList:
      description: 分頁查詢回傳結構
      type: object
      properties:
        page:
          type: number
          description: 頁碼
          example: 1
        size:
          type: number
          description: 每頁顯示筆數
          example: 15
        total:
          type: number
          description: 總資料筆數
          example: 120
    Image:
      type: object
      properties:
        id: 
          type: number
          description: 圖片編號
        filename: 
          type: string
          description: 圖片名稱(檔名)
        url: 
          type: string
          description: 圖片資源網址
        numWidths:
          type: number
          description: 圖片切塊(寬)
        numHeights:
          type: number
          description: 圖片切塊(高)
    Sticker:
      type: object
      properties:
        name:
          type: string
          description: 貼圖名稱
        filename:
          type: string
          description: 貼圖的圖片名稱
        url: 
          type: string
          description: 圖片資源網址
        numWidths:
          type: number
          description: 圖片切塊(寬)
        numHeights:
          type: number
          description: 圖片切塊(高)
    SkinType:
      type: number
      description: |
        #### skin 類型
        - 1 # 頭像
        - 2 # 外框
        - 3 # 特效
        - 4 # 背景
      enum:
        - 1 # 頭像
        - 2 # 外框
        - 3 # 特效
        - 4 # 背景
    Skin:
      type: object
      properties:
        type: 
          $ref: '#/components/schemas/SkinType'
        name:
          type: string
          description: 貼圖名稱
        imageId:
          type: number
          description: 圖片編號
        index:
          type: number
          description: 圖片位置  
    GameType:
      type: string
      description: |
        #### 遊戲類型
        - slot # Slot
        - table # table game 
      enum:
        #### 遊戲類型
        - slot # Slot
        - table # table game 
    Game:
      type: object
      properties:
        id:
          type: number
          description: 遊戲 ID
        type:
          $ref: '#/components/schemas/GameType'
        imageId:
          type: number
          description: 圖片編號
        index:
          type: number
          description: 圖片位置  
        multiplayer:
          type: boolean
          description: 是否為多人遊戲
        name:
          type: string
          description: 遊戲名稱
        minimumLevel:
          type: number
          description: 最低等級限制
    Item:
      type: object
      description: 道具
      properties:
        id: 
          type: number
        name: 
          type: string
        key: 
          type: string
        transferable:
          type: boolean
          description: 是否可轉讓
        description:
          type: string
          description: 道具描述
        imageId:
          type: number
          description: 圖片編號
        index:
          type: number
          description: 圖片位置  
    InviteStatus:
      type: number
      description: |
        - 0 # 未設定
        - 1 # 互為好友
        - 2 # 已邀請
        - 3 # 被邀請
      enum:
        - 0 # 未設定
        - 1 # 互為好友
        - 2 # 已邀請
        - 3 # 被邀請
    Member:
      type: object
      properties:
        id: 
          type: number
          description: 玩家 id
        mail: 
          type: string
          description: 玩家 mail
        avatar: 
          type: string
          description: 頭像圖片路徑
        nickname:
          type: string
          description: 玩家暱稱
        code:
          type: string
          description: 玩家 code
        introduction:
          type: string
          description: 簡介
        level:
          type: number
          description: 等級
        experience:
          type: number
          description: 經驗值
        inviteStatus:
          $ref: '#/components/schemas/InviteStatus'
        isBlock:
          type: boolean
          description: 是否黑名單
        diamondPoint:
          type: number
          description: 玩家鑽石點數
        gamePoint:
          type: number
          description: 玩家遊戲點數
        numLogins:
          type: number
          description: 登入次數
        position:
          type: string
          description: 玩家目前位置
        skins: 
          $ref: '#/components/schemas/MemberSkin'
    MemberSkin:
      type: array
      description: 已套用的 skin id
      items:
        type: number
    GameRecord:
      type: object
      properties:
        numWinners:
          type: number
          description: 中獎次數
        numBonus:
          type: number
          description: 獎勵遊戲次數
        totalBonus: 
          type: number
          description: 獎勵遊戲總分
        totalWinner:
          type: number
          description: 贏得總分
        maxWinner:
          type: number
          description: 最高得分
        times:
          type: number
          description: 遊戲次數
    MissionStatus:
      type: number
      description: |
        - 0 # 未承接
        - 1 # 進行中
        - 2 # 已完成
        - 3 # 已取消
        - 4 # 失敗
        - 5 # 過期
      enum:
        - 0 # 未承接
        - 1 # 進行中
        - 2 # 已完成
        - 3 # 已取消
        - 4 # 失敗
        - 5 # 過期
    Mission:
      type: object
      properties:
        id:
          type: number
          description: 任務 id 
        mmid:
          type: number
          description: 玩家接受後的任務 id (未承接時 = 0)
        key: 
          type: string
          description: 任務識別 key 
        name: 
          type: string
          description: 任務名稱
        isDaily:
          type: boolean
          description: 是否為每日任務
        status:
          $ref: '#/components/schemas/MissionStatus'
        actualValue: 
          type: number
          description: 目前完成值
        targetValue:
          type: number
          description: 目標值 (actualValue / targetValue = 完成率)
        minimumLevel:
          type: number
          description: 等級限制
        description:
          type: string
          description: 任務說明
    MailType:
      type: number
      description: |
        - 1 # 一般通知訊息
        - 2 # 獎勵訊息
      enum:
        - 1 # 一般通知訊息
        - 2 # 獎勵訊息
    MailRow: 
      type: object
      properties:
        id:
          type: number
        title:
          type: string
        type:
          $ref: '#/components/schemas/MailType'
        readedAt:
          type: number
          description: 已讀時間
        expiredAt:
          type: number
          description: 信件過期時間
        receivedAt:
          type: number 
          description: 附件領取時間
        createdAt:
          type: number
          description: 建立時間
    MailDetail:
      type: object
      allOf:
        - $ref: '#/components/schemas/MailRow'
        - type: object
          properties:
            content:
              type: string
            annexs:
              type: array
              items:
                type: object
                properties:
                  id: 
                    type: number
                    description: 道具 id
                  numItems:
                    type: number
                    description: 道具數量
 
    MessageType:
      type: number
      description: |
        - 1 # text 
        - 2 # sticker
        - 3 # image
        - 4 # autdio
        - 5 # video
      enum:
        - 1 # text 
        - 2 # sticker
        - 3 # image
        - 4 # autdio
        - 5 # video
    ChatPublic:
      type: object
      properties:
        id:
          type: number
        name: 
          type: string
          description: 頻道名稱
        description:
          type: string
          description: 聊天室說明
    ChatMessage:
      type: object
      properties:
        id: 
          type: number
        chatId:
          type: number
        memberId:
          type: number
        messageType:
          $ref: '#/components/schemas/MessageType'
        message:
          type: string
        createdAt:
          type: number
    PrivateMessage:
      type: object
      properties:
        id:
          type: number
        fromId:
          type: number
          description: 來自某人 id
        ToId:
          type: number
          description: 傳給某人 id
        messageType:
          $ref: '#/components/schemas/MessageType'
        message:
          type: string
        createdAt:
          type: number
    StoreType:
      type: number
      description: |
        #### 商店類型
        - 1 # buy (玩家購買)
        - 2 # sell (玩家售出)
      enum:
        #### 商店類型
        - 1 # buy (玩家購買)
        - 2 # sell (玩家售出)

    PointType:
      type: number
      description: |
        #### 點數類型
        - 1 # diamond point
        - 2 # game point
      enum:
        #### 點數類型
        - 1 # diamond point
        - 2 # game point
    CommodityType:
      type: number
      description: |
        #### 商品類型
        - 1 # avatar skin
        - 2 # item
        - 3 # sticker
      enum:
        #### 商品類型
        - 1 # avatar skin
        - 2 # item
        - 3 # sticker
    Store:
      type: object
      properties: 
        name: 
          type: string
          description: 商店名稱
        description:
          type: string
          description: 商店說明
        StoreType:
          $ref: '#/components/schemas/StoreType'
        startAt:
          type: number
          description: 商店活動時間 - 起 (0 則無限制)
        endAt:
          type: number
          description: 商店活動時間 - 訖 (0 則無限制)
        commodityAvatars:
          type: array
          items: 
            $ref: '#/components/schemas/CommodityAvatar'
        commodityItems:
          type: array
          items:
            $ref: '#/components/schemas/CommodityItem'
        commodityStickers:
          type: array
          items:
            $ref: '#/components/schemas/CommoditySticker'
    CommodityAvatar:
      type: object
      description: 商品 - 頭像 skin 
      properties:
        id: 
          type: number
        storeId:
          type: number
        skinId:
          type: number
        pointType:
          $ref: '#/components/schemas/PointType'
        price:
          type: number
          description: 價格
    CommodityItem:
      type: object
      description: 商品 - 道具
      properties:
        id: 
          type: number
        storeId:
          type: number
        itemId:
          type: number
        item:
          $ref: '#/components/schemas/Item'
        numPackages:
          type: number
          description: 每包數量
        pointType:
          $ref: '#/components/schemas/PointType'
        price:
          type: number
          description: 價格
    CommoditySticker:
      type: object
      description: 商品 - 道具
      properties:
        id: 
          type: number
        stickerId:
          type: number
        pointType:
          $ref: '#/components/schemas/PointType'
        price:
          type: number
          description: 價格
    ExchangeStep:
      type: number
      description: |
        - 1 # 同意邀請
        - 2 # 鎖定內容
        - 3 # 確定交換
      enum:
        - 1 # 同意邀請
        - 2 # 鎖定內容
        - 3 # 確定交換
    ExchangeContent: 
      type: object
      properties:
        id:
          type: number
          description: 玩家 id
        step:
          $ref: '#/components/schemas/ExchangeStep' 
        gamePoint: 
          type: number
        itemId:
          type: number
        numItems:  
          type: number
    GashaponCost:
      type: object
      properties:
        id:
          type: number
        gashaponId:
          type: number
        itemId:
          type: number
          description: 消費的道具
        numItems:
          type: number
          description: 每一次消費的數量
        times:
          type: number
          description: 每次消費可轉幾次
    Gashapon:
      type: object
      properties:
        id: 
          type: number
        name:
          type: string
          description: 活動名稱
        description:
          type: string
          description: 活動說明
        startAt:
          type: number
          description: 活動時間 - 起 (0 則無限制)
        endAt:
          type: number
          description: 活動時間 - 訖 (0 則無限制)
        costs:
          type: array
          description: 消費方式
          items:
            $ref: '#/components/schemas/GashaponCost'
    
    AnnouncementType:
      type: number
      description: |
        #### 公告類型
        - 1 # 官方
        - 2 # 遊戲
      enum:
        #### 公告類型
        - 1 # 官方
        - 2 # 遊戲
    QueryAnnouncementType:
      type: number
      description: |
        #### 公告類型
        - -1 # 全部
        - 1 # 官方
        - 2 # 遊戲
      enum:
        #### 公告類型
        - -1 # 全部
        - 1 # 官方
        - 2 # 遊戲

    Announcement:
      type: object
      properties:
        id: 
          type: number
        title:
          type: string
        content:
          type: string
        type:
          $ref: '#/components/schemas/AnnouncementType'
        startAt:
          type: number
          description: 商店活動時間 - 起 (0 則無限制)
        endAt:
          type: number
          description: 商店活動時間 - 訖 (0 則無限制)


