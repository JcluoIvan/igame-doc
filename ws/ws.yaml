openapi: 3.0.0
info:
  title: Swagger Petstore
  description: |
    #### websocket 通訊 (非 request / response )
    - 所有 send/get 資料都是 bytes 資料, 由 string 代表, 使用 maxLength 代表佔位, 每 1 長度代表 1 byte
    - 資料開頭由 channel(uint8) + event id (uint16_ 組成，共 3 bytes
      - uint8 (1 ~ 255) 為請求的 channel , 相同的 channel 同一時間只能發出一個 (0 為保留值，代表後端主動發出的)
      - uint16 (1 ~ 65535) 為請求類型, 請參考下方 api 說明
    - 參數名稱為(大寫)代表為 byte 資料，於「備註」說明佔位大小，以 byte:{strart}:{end}表示
      - 例如開頭的 channel 為 1byte, 以 byte:0:1 表示， event id 為 byte:1:3
    - 由於 js 無法直接讀取 bit 資料, 所以 boolean 也使用 1 byte 長度(0 or 1)
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
  version: 0.0.1
externalDocs:
  description: Find out more about Swagger
  url: "http://swagger.io"

servers:
  - url: "https://api.project-host.net/v1"
    description: 正式伺服器網址
  - url: "http://demo.project-host.net/v1"
    description: 測試伺服器網址
tags:
  - name: Get
    description: 所有會收到的類型
  - name: Send
    description: 可發出請求更新
  - name: Home
    description: 首頁
  - name: Personal
    description: 個人
paths:
  /1:
    post:
      summary: 更新圖片資源
      tags:
        - Send
        - Get
        - Home
      requestBody:
        description: 更新圖片資源
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/EventData'
                - type: object
                  properties:
                    HASH_CODE:
                      type: string
                      example: (byte:3:*)
                      description: 圖片資源的 hash code, 用來檢查是否更新
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/EventData"
                  - type: object
                    properties:
                      DATA:
                        type: object
                        description: 圖片資源的資料 json data
                        example: (byte:3:*)
                        properties:
                          hashCode: 
                            type: string
                            description: 圖片資源的 hash code, 用來檢查是否更新
                          images:
                            type: array
                            description: 圖片資源列表
                            items:
                              $ref: '#/components/schemas/Image'
  /2:
    post:
      summary: 遊戲列表
      tags:
        - Send
        - Get
        - Home
      requestBody:
        description: 更新遊戲列表
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/EventData'
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/EventData"
                  - type: object
                    properties:
                      GAME_LIST:
                        type: array
                        description: 遊戲列表 json data 
                        example: (byte:3:*) 
                        items:
                          $ref: '#/components/schemas/Game'
                          
  /3:
    post:
      summary: 取得貼圖列表
      tags:
        - Send
        - Get
        - Home
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/EventData"
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/EventData"
                  - type: object
                    properties:
                      SKICKER: 
                        description: 貼圖列表 json data
                        example: (byte:3:*)
                        type: array
                        items: 
                          $ref: '#/components/schemas/Sticker'
  /4:
    post:
      summary: 取得頭像 skin 列表 (avatar skin)
      tags:
        - Send
        - Get
        - Home
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/EventData"
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/EventData"
                  - type: object
                    properties:
                      AVATAR_SKINS: 
                        description: 頭像 skin 列表 json data
                        example: (byte:3:*)
                        type: array
                        items: 
                          $ref: '#/components/schemas/AvatarSkin'
  /5:
    post:
      summary: 跑馬燈資訊
      tags:
        - Get
        - Home
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/EventData"
                  - type: object
                    example: (byte:3:*)
                    properties:
                      MARQUEE:
                        type: string
                        description: 跑馬燈內容 (string)
                        example: (byte:3:*) string
  
  /6:
    post:
      summary: 取得玩家基本資料
      tags:
        - Send
        - Get
        - Home
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/EventMemberData"
                  
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/EventData"
                  - type: object
                    properties:
                      MEMBER_BASE_DATA: 
                        example: (byte:3:*)
                        type: object
                        allOf:
                          - $ref: '#/components/schemas/MemberBaseData'

  /7:
    post:
      summary: 取得隨機玩家 (必需過濾黑名單)
      tags:
        - Send
        - Get
        - Home
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: "#/components/schemas/EventData"
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/EventData"
                  - type: object
                    properties:
                      MEMBER_BASE_DATA: 
                        example: (byte:3:*)
                        type: object
                        allOf:
                          - $ref: '#/components/schemas/MemberBaseData'
    
  /8:
    post:
      summary: 請求失敗，錯誤回應
      tags:
        - Send
        - Get
      requestBody:
        description: "`無請求處理`"
        content:
          application/json:
            schema:
              example: empty
      responses:
        "200":
          description: 當任何請求發生失敗的時後，都以此事件回傳錯誤內容
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/EventData"
                  - type: object
                    properties:
                      ERROR_CODE: 
                        example: (byte:3:5)
                        type: number
                      ERROR_MESSAGE:
                        example: (byte:5:*)
                        type: string
  /9:
    post:
      tags:
        - Get
        - Send
        - Home
      summary: 更新 Diamond Point
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/EventData'
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/EventMemberData"
                  - type: object
                    properties:
                      DIAMOND_POINT:
                        type: number                
                        example: (byte:11:*)
                        description: Diamond point (int64)                       
  /10:
    post:
      tags:
        - Get
        - Home
      summary: 更新 Game Point
      requestBody:
        content:
          application/json:
            description: 僅允許更新自己的額度
            schema:
              allOf:
                - $ref: '#/components/schemas/EventData'
      responses:
        "200":
          description: ok
          content:
            application/json:
              description: 除了自己額度以外， server 也會主動通知其他玩家額度更新
              schema:
                allOf:
                  - $ref: "#/components/schemas/EventMemberData"
                  - type: object
                    properties:
                      GAME_POINT:
                        type: number                
                        example: (byte:11:*)
                        description: Game point (int64)
  
  /11:
    post:
      summary: 更新玩家等級
      tags:
        - Send
        - Get
        - Personal
      requestBody:
        description: 請求更新 等級
        content:
          application/json:
            schema:
                allOf:
                  - $ref: "#/components/schemas/EventData"
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/EventMemberData"
                  - type: object
                    properties:
                      LEVEL:
                        type: number
                        example: (byte:11:15)
                        description: 等級 (uint32)
  /12:
    post:
      summary: 更新玩家經驗值(Experience)
      tags:
        - Send
        - Get
        - Personal
      requestBody:
        description: 請求更新 經驗值
        content:
          application/json:
            schema:
                allOf:
                  - $ref: "#/components/schemas/EventData"
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/EventMemberData"
                  - type: object
                    properties:
                      EXPERIENCE:
                        type: number
                        example: (byte:11:*)
                        description: 經驗值(uint64)
  /13:
    post:
      summary: 更新暱稱, Code
      tags:
        - Send
        - Get
        - Personal
      requestBody:
        description: 請求更新暱稱、頭像 `(僅更新自己的資料時，後端 server 才受理)`
        content:
          application/json:
            schema:
                allOf:
                  - $ref: "#/components/schemas/EventData"
                  - type: object
                    properties:
                      MEMBER_ID: 
                        type: number
                        example: (byte:3:*)
                        description: 玩家 id 
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/EventData"
                  - type: object
                    properties:
                      DATA:
                        type: object
                        example: (byte:3:*)
                        description: 暱稱、 code
                        properties:
                          nickname: 
                            type: string
                            description: 暱稱
                          code:
                            type: string
                            description: 玩家 code

    /14:
      post:
        summary: 更新頭像
        tags:
          - Get
          - Send
          - Personal
        requestBody:
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/EventData'
        responses:
          "200":
            description: ok
            content:
              application/json:
                schema:
                  allOf:
                    - $ref: "#/components/schemas/EventMemberData"
                    - type: object
                      properties:
                        AVATAR_URL:
                          type: string
                          example: (byte:11:*)
                          description: 頭像網址
  /15:
    post:
      summary: 更新 avatar skin
      tags:
        - Get
        - Send
        - Personal
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/EventData'
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/EventData"
                  - type: object
                    properties:
                      MEMBER_ID: 
                        type: number
                        example: (byte:3:11)
                        description: 玩家 id 
                      SKIN_TYPE:
                        type: number
                        example: (byte:11:12)
                        description: skin 類型(uint8)
                        allOf:
                          - $ref: '#/components/schemas/AvatarSkinType'
                      SKIN_ID:
                        type: number
                        example: (byte:12:20)
                        description: avatar_skin.id (uint64)
  /16:
    post:
      summary: 更新簡介
      tags:
        - Send
        - Get
        - Personal
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/EventData'
                - type: object
                  properties:
                    INTRODUCTION:
                      type: string
                      example: (byte:3:*)
                      description: 簡介
  /17:
    post:
      summary: 更新 email
      tags:
        - Send
        - Get
        - Personal
      description: 僅會更新自己的 email 資料
      requestBody:
        content:
          application/json:
            schema:
                allOf:
                  - $ref: "#/components/schemas/EventData"
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/EventData"
                  - type: object
                    properties:
                      EMAIL:
                        type: string
                        example: (byte:3:*)
                        description: 玩家 Email
  /18:
    post:
      summary: 更新玩家遊戲位置 (position)
      tags:
        - Get
        - Personal
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/EventData"
                  - type: object
                    properties:
                      MEMBER_ID: 
                        type: number
                        example: (byte:3:11)
                        description: 玩家 id 
                      POSITION:
                        type: string
                        example: (byte:11:*)
                        description: 玩家目前位置
  /19:
    post:
      summary: 檢查暱稱重複
      tags: 
        - Get
        - Send
        - Personal
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/EventData' 
                - type: object
                  properties:
                    NICKNAME:
                      type: string
                      example: (byte:3:*)
                      description: 暱稱
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/EventData'
                  - type: object
                    properties:
                      NUM_REPEATS: 
                        type: number
                        example: (byte:3:*)
                        description: 暱稱重複次數
  /20:
    post:
      summary: 修改暱稱
      tags:
        - Get
        - Send
        - Personal
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/EventData'
                - type: object
                  properties:
                    NICKNAME:
                      type: string
                      example: (byte:3:*)
                      description: 暱稱
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                allOf: 
                  - $ref: '#/components/schemas/EventData'
  /21:
    post:
      summary: 修改簡介
      tags:
        - Get
        - Send
        - Personal
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/EventData'
                - type: object
                  properties:
                    INTRODUCTION:
                      type: string
                      example: (byte:3:*)
                      description: 簡介
      responses:
        200:
          description: ok
          content:
            application/json:
              schema:
                allOf: 
                  - $ref: '#/components/schemas/EventData'

  /22:
    post:
      summary: 更新累積回饋、介紹人、在線玩家
      tags:
        - Get
        - Send
        - Personal
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/EventData'
      responses:
        200:
          description: 'ok'
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/EventData'
                  - type: object
                    properties:
                      DATA: 
                        description: json data
                        example: (byte:3:*)
                        type: object
                        properties:
                          bonusPoint:
                            type: number
                            description: 累計回鐀
                          invitedFrom:
                            type: string 
                            description: 推薦人名稱
                          invitedUsers:
                            type: array
                            items:
                              type: object
                              properties:
                                avatar:
                                  type: string
                                skin:
                                  $ref: '#/components/schemas/MemberAvatarSkin'
                                nickname:
                                  type: string
                                code:
                                  type: string
                                gamePoint:
                                  type: number

  /23:
    post:
      summary: 更新個人設定
      tags:
        - Get
        - Send
        - Personal
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: '#/components/schemas/EventData'
      responses:
        200:
          description: 僅更新自己的資料
          content:
            application/json:
              schema:
                allOf: 
                  - $ref: '#/components/schemas/EventData'
                  - type: object
                    properties:
                      ALLOW_TALK_STRANGER:
                        type: boolean
                        example: (byte:3:4)
                        description: 是否接受陌生人密語
                      ALLOW_INVITE_FRIEND:
                        type: boolean
                        example: (byte:4:5)
                        description: 是否允許好友邀請
                      TRANSACTION_PASSWORD_SETTED:
                        type: boolean
                        example: (byte:5:6)
                        description: 是否已設定交易密碼
                          
components:
  schemas:
    EventData:
      type: object
      properties:
        EVENT_CHANNEL:
          type: string
          maxLength: 1
          description: |
            #### 請求的頻道, 用來確認資料的回傳(0. 則代表 server 端的主動訊息)
            - range: 1 ~ 255
            - 每個 channel 編號同時只能發送一次
            - 每個 channel 發送後，必需設定 timeout, 時間內未接到回傳時，認定失敗
          example: (byte:0:1)
        EVENT_ID:
          type: string
          maxLength: 2
          description: |
            #### 事件編號
            - range: 1 ~ 65535
            - 用來定義各請求 or 資料的編號
          example: (byte:1:3)
    EventMemberData: 
      allOf:
        - $ref: '#/components/schemas/EventData'
        - type: object
          properties:
            MEMBER_ID: 
              type: number
              example: (byte:3:11)
              description: 玩家 id (int64)
    Image:
      type: object
      properties:
        id: 
          type: number
          description: 圖片編號
        filename: 
          type: string
          description: 圖片名稱(檔名)
        url: 
          type: string
          description: 圖片資源網址
        numWidths:
          type: number
          description: 圖片切塊(寬)
        numHeights:
          type: number
          description: 圖片切塊(高)
    ImageIndex:
      type: object
      properties:
        imageId:
          type: number
          description: 圖片編號
        index:
          type: number
          description: 圖片位置  
    Sticker:
      type: object
      properties:
        name:
          type: string
          description: 貼圖名稱
        filename:
          type: string
          description: 貼圖的圖片名稱
        url: 
          type: string
          description: 圖片資源網址
        numWidths:
          type: number
          description: 圖片切塊(寬)
        numHeights:
          type: number
          description: 圖片切塊(高)
    AvatarSkinType:
      type: number
      description: |
        #### skin 類型
        - 1 # 頭像
        - 2 # 外框
        - 3 # 特效
        - 4 # 背景
      enum:
        - 1 # 頭像
        - 2 # 外框
        - 3 # 特效
        - 4 # 背景
    AvatarSkin:
      type: object
      properties:
        type: 
          $ref: '#/components/schemas/AvatarSkinType'
        name:
          type: string
          description: 貼圖名稱
        filename:
          type: string
          description: 貼圖的圖片名稱
        url: 
          type: string
          description: 圖片資源網址
    GameType:
      type: string
      description: |
        #### 遊戲類型
        - slot # Slot
        - table # table game 
      enum:
        #### 遊戲類型
        - slot # Slot
        - table # table game 
    Game:
      type: object
      properties:
        id:
          type: number
          description: 遊戲 ID
        type:
          $ref: '#/components/schemas/GameType'
        image: 
          $ref: '#/components/schemas/ImageIndex'
        name:
          type: string
          description: 遊戲名稱
        minimumLevel:
          type: number
          description: 最低等級限制
    MemberBaseData:
      type: object
      properties:
        avatar: 
          type: string
          description: 頭像圖片路徑
        nickname:
          type: string
          description: 玩家暱稱
        code:
          type: string
          description: 玩家 code
        introduction:
          type: string
          description: 簡介
        level:
          type: number
          description: 等級
        experience:
          type: number
          description: 經驗值
        inviteStatus:
          type: number
          description: 邀請狀態 (1. 互為好友, 2.已邀請, 3.被邀請)
        isBlock:
          type: boolean
          description: 是否黑名單
        diamondPoint:
          type: number
          description: 玩家鑽石點數
        gamePoint:
          type: number
          description: 玩家遊戲點數
        numLogins:
          type: number
          description: 登入次數
        position:
          type: string
          description: 玩家目前位置
        skin: 
          $ref: '#/components/schemas/MemberAvatarSkin'
    MemberAvatarSkin:
      type: object
      properties:
        skinAvatar: 
          type: number
          description: 頭像 skin 
        skinAvatarFrame:
          type: number
          description: 頭像外框 skin
        skinAvatarEffects:
          type: number
          description: 頭像特效 skin
        skinAvatarBackground:
          type: number
          description: 頭像背景 skin
          
        
